apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext {
    versionMajor = 0
    versionMinor = 7
    versionPatch = 8
}

android {
    signingConfigs {
        playConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file("$rootDir/../AndroidKeyStore/net_wuqs.jks")
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "net.wuqs.ontime"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode genVersionCode()
        versionName genVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.playConfig
        }
        debug {
            versionNameSuffix "-debug"
            debuggable true
            ext.alwaysUpdateBuildId = false
            applicationIdSuffix '.debug'
        }
    }
    productFlavors {
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    buildToolsVersion '28.0.3'
}

private Integer genVersionCode() {
    return ext.versionMajor * 100000 + ext.versionMinor * 1000 + ext.versionPatch * 10
}

private String genVersionName() {
    String name = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    return name
}

dependencies {
    def room_version = '2.1.0-alpha04'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha03'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0-alpha02'
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation 'junit:junit:4.12'
    // Test helpers for Room
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
    androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'
}
